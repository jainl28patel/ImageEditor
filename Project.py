# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Project1.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QLabel ,QFileDialog ,QRubberBand
from PyQt5.QtGui import QIcon, QPixmap, QImage, QTransform, QPalette, qRgb, QColor
from PyQt5.QtCore import Qt, QSize, QRect
import sys ,os

class img(QLabel):
    def __init__(self):
        super().__init__()
        self.image=QImage()
        self.originalImg=self.image



class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(0, 0, 811, 551))
        self.label.setText("")
        self.label.setScaledContents(True)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 24))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuEdit = QtWidgets.QMenu(self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        self.menuEffects = QtWidgets.QMenu(self.menuEdit)
        self.menuEffects.setObjectName("menuEffects")
        self.menuReset_image = QtWidgets.QMenu(self.menubar)
        self.menuReset_image.setObjectName("menuReset_image")
        self.menuAbout = QtWidgets.QMenu(self.menubar)
        self.menuAbout.setObjectName("menuAbout")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionreset = QtWidgets.QAction(MainWindow)
        self.actionreset.setObjectName("actionreset")
        self.actionOpen = QtWidgets.QAction(MainWindow)
        self.actionOpen.setObjectName("actionOpen")
        self.actionSave = QtWidgets.QAction(MainWindow)
        self.actionSave.setObjectName("actionSave")
        self.actionRotate_CW = QtWidgets.QAction(MainWindow)
        self.actionRotate_CW.setObjectName("actionRotate_CW")
        self.actionRotate_ACW = QtWidgets.QAction(MainWindow)
        self.actionRotate_ACW.setObjectName("actionRotate_ACW")
        self.actionFlip_Horizontal = QtWidgets.QAction(MainWindow)
        self.actionFlip_Horizontal.setObjectName("actionFlip_Horizontal")
        self.actionFlip_Verticle = QtWidgets.QAction(MainWindow)
        self.actionFlip_Verticle.setObjectName("actionFlip_Verticle")
        self.actionReduce_size = QtWidgets.QAction(MainWindow)
        self.actionReduce_size.setObjectName("actionReduce_size")
        self.actioninc_size = QtWidgets.QAction(MainWindow)
        self.actioninc_size.setObjectName("actioninc_size")
        self.actionGrey_scale = QtWidgets.QAction(MainWindow)
        self.actionGrey_scale.setObjectName("actionGrey_scale")
        self.actionRGB = QtWidgets.QAction(MainWindow)
        self.actionRGB.setObjectName("actionRGB")
        self.actionmono = QtWidgets.QAction(MainWindow)
        self.actionmono.setObjectName("actionmono")
        self.actioncrop = QtWidgets.QAction(MainWindow)
        self.actionmono.setObjectName("actioncrop")
        self.menuFile.addAction(self.actionOpen)
        self.menuFile.addAction(self.actionSave)
        self.menuEffects.addAction(self.actionGrey_scale)
        self.menuEffects.addAction(self.actionRGB)
        self.menuEffects.addAction(self.actionmono)
        self.menuEdit.addAction(self.actioncrop)
        self.menuEdit.addAction(self.actionRotate_CW)
        self.menuEdit.addAction(self.actionRotate_ACW)
        self.menuEdit.addAction(self.actionFlip_Horizontal)
        self.menuEdit.addAction(self.actionFlip_Verticle)
        self.menuEdit.addAction(self.actionReduce_size)
        self.menuEdit.addAction(self.actioninc_size)
        self.menuEdit.addAction(self.menuEffects.menuAction())
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuReset_image.menuAction())
        self.menubar.addAction(self.menuAbout.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        #opening image
        self.actionOpen.triggered.connect(self.open)

        #rotate cw by 90
        self.actionRotate_CW.triggered.connect(self.RotateCW)

        #rotate acw by 90
        self.actionRotate_ACW.triggered.connect(self.RotateACW)

        #horizontal flip
        self.actionFlip_Horizontal.triggered.connect(self.Horizontal_flip)
        #vertical flip
        self.actionFlip_Verticle.triggered.connect(self.Vertical_flip)
        #applying effects
        self.actionRGB.triggered.connect(self.rgb)
        self.actionGrey_scale.triggered.connect(self.greyscale)
        self.actionmono.triggered.connect(self.mono)
        #reducing size
        self.actionReduce_size.triggered.connect(self.reduce_size)
        #saving
        self.actionSave.triggered.connect(self.save)


    def open(self):
        fname = QFileDialog.getOpenFileName()
        self.img = QImage(fname[0])
        self.label.setPixmap(QPixmap().fromImage(self.img))

    def RotateCW(self):
        transform = QTransform().rotate(90)
        self.img = self.img.transformed(transform)
        self.label.setPixmap(QPixmap().fromImage(self.img))

    def RotateACW(self):
        transform2 = QTransform().rotate(-90)
        self.img = self.img.transformed(transform2)
        self.label.setPixmap(QPixmap().fromImage(self.img))

    def Horizontal_flip(self):
        transform = QTransform().scale(-1,1)
        self.img = self.img.transformed(transform)
        self.label.setPixmap(QPixmap().fromImage(self.img))

    def Vertical_flip(self):
        transform = QTransform().scale(1,-1)
        self.img = self.img.transformed(transform)
        self.label.setPixmap(QPixmap().fromImage(self.img))
    def zoom_in(self):
        pass
    def zoom_out(self):
        pass
    def reduce_size(self):
        transform = QTransform().scale(0.5,0.5)
        self.img = self.img.transformed(transform)
        self.label.setPixmap(QPixmap().fromImage(self.img))
    def increase_size(self):
        transform = QTransform().scale(1.5, 1.5)
        self.img = self.img.transformed(transform)
        self.label.setPixmap(QPixmap().fromImage(self.img))
    def rgb(self):
        converted = self.img.convertToFormat(QImage.Format_RGB32)
        self.img=QImage(converted)
        self.label.setPixmap(QPixmap().fromImage(self.img))
    def greyscale(self):
        converted=self.img.convertToFormat(QImage.Format_Grayscale16)
        self.img = QImage(converted)
        self.label.setPixmap(QPixmap().fromImage(self.img))
    def mono(self):
        converted=self.img.convertToFormat(QImage.Format_Mono)
        self.img = QImage(converted)
        self.label.setPixmap(QPixmap().fromImage(self.img))
    def save(self):
        fname = QFileDialog.getSaveFileName()
        self.img.save(fname[0])



    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuEdit.setTitle(_translate("MainWindow", "Edit"))
        self.menuEffects.setTitle(_translate("MainWindow", "Effects"))
        self.menuReset_image.setTitle(_translate("MainWindow", "Reset image"))
        self.menuAbout.setTitle(_translate("MainWindow", "About"))
        self.actionOpen.setText(_translate("MainWindow", "Open"))
        self.actionSave.setText(_translate("MainWindow", "Save"))
        self.actionRotate_CW.setText(_translate("MainWindow", "Rotate CW"))
        self.actionRotate_ACW.setText(_translate("MainWindow", "Rotate ACW"))
        self.actionFlip_Horizontal.setText(_translate("MainWindow", "Flip Horizontal"))
        self.actionFlip_Verticle.setText(_translate("MainWindow", "Flip Verticle"))
        self.actionReduce_size.setText(_translate("MainWindow", "Reduce size"))
        self.actioninc_size.setText(_translate("MainWindow", "Increase size"))
        self.actionGrey_scale.setText(_translate("MainWindow", "Grey scale"))
        self.actionRGB.setText(_translate("MainWindow", "RGB"))
        self.actionmono.setText(_translate("MainWindow", "MONO"))
        self.actionreset.setText(_translate("MainWindow", "Reset"))
        self.actioncrop.setText(_translate("MainWindow", "Crop"))




if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
